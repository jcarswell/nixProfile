#!/bin/bash
#set -x
[[ "$-" != *i* ]] && return

export JPRO="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
pushd $JPRO > /dev/null

. version
INSTALLED_VERSION=${nixProfile}

unset nixProfile

curl -Ss -m 5 git.ttdev.ca > /dev/null

if [ $? == 0 ]; then
    tempfile=$(mktemp /tmp/init-version.XXXX)
    curl -s https://git.ttdev.ca/josh.carswell/nixProfile/raw/master/version > $tempfile
    . $tempfile
    rm -f $tempfile
fi

if [ -z $nixProfile ]; then
    echo -e '\033[31mERROR:\033[0m Failed to retrive update info'
elif [[ $INSTALLED_VERSION < $nixProfile ]]; then
    echo "look's like theirs a newer version"
    git pull
    popd > /dev/null
    ${JPRO}/install.sh
    . ${0}
    RETVAL=$?
    echo "Update complete, you may need to restart this terminal"
    return $RETVAL
elif [[ $INSTALLED_VERSION > $nixProfile ]]; then
    echo "looks like you haven't pushed your changes yet"
fi

. version
## Source Global config
[ -f /etc/bashrc ] && . /etc/bashrc
[ -f /etc/bash.bashrc ] && . /etc/bash.bashrc

# Functions
[ -f ./bin/function.sh ] && . ./bin/function.sh
OSVer="$(getOsVer)"

#source user global configs
if [ -d "./shell/" ]; then
    for f in ./shell/*.sh; do source $f; done
fi

#source os specific configs
if [ -d "./os/${OSVer}/" ]; then
    for f in ./os/${OSVer}/*.sh; do source $f; done
fi
if [ -d "./os/${OSTYPE}/" ]; then
    for f in ./os/${OSTYPE}/*.sh; do source $f; done
fi
if [ ${OSTYPE} == "linux" ]; then
    for f in ./os/linux-gnu/*.sh; do source $f; done
fi

#source local not synced configs
if [ -d "./local/" ]; then
    for f in ./local/*.sh; do source $f; done
fi

#set +x
popd > /dev/null
# vim: ts=4:syntax=sh:expandtab:sw=4
